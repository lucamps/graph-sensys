// Generated from linear_prog.g4 by ANTLR 4.12.0
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,22,172,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,1,0,1,0,3,0,64,8,0,1,1,1,1,3,1,68,8,1,1,2,1,
2,1,2,1,2,1,2,1,2,3,2,76,8,2,1,3,1,3,5,3,80,8,3,10,3,12,3,83,9,3,1,4,1,4,
1,4,1,4,1,5,1,5,1,5,1,5,1,6,3,6,94,8,6,1,7,1,7,3,7,98,8,7,1,8,1,8,1,8,3,
8,103,8,8,1,8,1,8,3,8,107,8,8,1,9,4,9,110,8,9,11,9,12,9,111,1,9,1,9,4,9,
116,8,9,11,9,12,9,117,3,9,120,8,9,1,10,4,10,123,8,10,11,10,12,10,124,1,11,
1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,
18,1,19,1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,
1,25,1,25,1,26,1,26,1,27,1,27,1,27,1,28,1,28,1,29,4,29,167,8,29,11,29,12,
29,168,1,29,1,29,0,0,30,1,1,3,2,5,3,7,4,9,0,11,0,13,0,15,0,17,5,19,0,21,
0,23,0,25,0,27,6,29,7,31,8,33,9,35,10,37,11,39,12,41,13,43,14,45,15,47,16,
49,17,51,18,53,19,55,20,57,21,59,22,1,0,13,2,0,83,83,115,115,4,0,65,65,84,
84,97,97,116,116,2,0,69,69,101,101,2,0,78,78,110,110,2,0,68,68,100,100,2,
0,70,70,102,102,2,0,73,73,105,105,2,0,77,77,109,109,2,0,65,65,97,97,2,0,
88,88,120,120,3,0,65,90,95,95,97,122,2,0,43,43,45,45,3,0,9,9,13,13,32,32,
174,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,17,1,0,0,0,0,27,1,
0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,
39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,
0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,1,63,
1,0,0,0,3,65,1,0,0,0,5,75,1,0,0,0,7,77,1,0,0,0,9,84,1,0,0,0,11,88,1,0,0,
0,13,93,1,0,0,0,15,97,1,0,0,0,17,99,1,0,0,0,19,109,1,0,0,0,21,122,1,0,0,
0,23,126,1,0,0,0,25,128,1,0,0,0,27,130,1,0,0,0,29,132,1,0,0,0,31,134,1,0,
0,0,33,136,1,0,0,0,35,138,1,0,0,0,37,140,1,0,0,0,39,142,1,0,0,0,41,145,1,
0,0,0,43,148,1,0,0,0,45,150,1,0,0,0,47,152,1,0,0,0,49,154,1,0,0,0,51,156,
1,0,0,0,53,158,1,0,0,0,55,160,1,0,0,0,57,163,1,0,0,0,59,166,1,0,0,0,61,64,
3,9,4,0,62,64,3,11,5,0,63,61,1,0,0,0,63,62,1,0,0,0,64,2,1,0,0,0,65,67,7,
0,0,0,66,68,7,1,0,0,67,66,1,0,0,0,68,4,1,0,0,0,69,70,7,2,0,0,70,71,7,3,0,
0,71,76,7,4,0,0,72,73,7,5,0,0,73,74,7,6,0,0,74,76,7,7,0,0,75,69,1,0,0,0,
75,72,1,0,0,0,76,6,1,0,0,0,77,81,3,13,6,0,78,80,3,15,7,0,79,78,1,0,0,0,80,
83,1,0,0,0,81,79,1,0,0,0,81,82,1,0,0,0,82,8,1,0,0,0,83,81,1,0,0,0,84,85,
7,7,0,0,85,86,7,8,0,0,86,87,7,9,0,0,87,10,1,0,0,0,88,89,7,7,0,0,89,90,7,
6,0,0,90,91,7,3,0,0,91,12,1,0,0,0,92,94,7,10,0,0,93,92,1,0,0,0,94,14,1,0,
0,0,95,98,3,13,6,0,96,98,2,48,57,0,97,95,1,0,0,0,97,96,1,0,0,0,98,16,1,0,
0,0,99,106,3,19,9,0,100,102,3,23,11,0,101,103,3,25,12,0,102,101,1,0,0,0,
102,103,1,0,0,0,103,104,1,0,0,0,104,105,3,21,10,0,105,107,1,0,0,0,106,100,
1,0,0,0,106,107,1,0,0,0,107,18,1,0,0,0,108,110,2,48,57,0,109,108,1,0,0,0,
110,111,1,0,0,0,111,109,1,0,0,0,111,112,1,0,0,0,112,119,1,0,0,0,113,115,
5,46,0,0,114,116,2,48,57,0,115,114,1,0,0,0,116,117,1,0,0,0,117,115,1,0,0,
0,117,118,1,0,0,0,118,120,1,0,0,0,119,113,1,0,0,0,119,120,1,0,0,0,120,20,
1,0,0,0,121,123,2,48,57,0,122,121,1,0,0,0,123,124,1,0,0,0,124,122,1,0,0,
0,124,125,1,0,0,0,125,22,1,0,0,0,126,127,7,2,0,0,127,24,1,0,0,0,128,129,
7,11,0,0,129,26,1,0,0,0,130,131,5,40,0,0,131,28,1,0,0,0,132,133,5,41,0,0,
133,30,1,0,0,0,134,135,5,43,0,0,135,32,1,0,0,0,136,137,5,45,0,0,137,34,1,
0,0,0,138,139,5,42,0,0,139,36,1,0,0,0,140,141,5,47,0,0,141,38,1,0,0,0,142,
143,3,43,21,0,143,144,3,47,23,0,144,40,1,0,0,0,145,146,3,45,22,0,146,147,
3,47,23,0,147,42,1,0,0,0,148,149,5,62,0,0,149,44,1,0,0,0,150,151,5,60,0,
0,151,46,1,0,0,0,152,153,5,61,0,0,153,48,1,0,0,0,154,155,5,46,0,0,155,50,
1,0,0,0,156,157,5,94,0,0,157,52,1,0,0,0,158,159,5,59,0,0,159,54,1,0,0,0,
160,161,3,7,3,0,161,162,3,29,14,0,162,56,1,0,0,0,163,164,5,10,0,0,164,58,
1,0,0,0,165,167,7,12,0,0,166,165,1,0,0,0,167,168,1,0,0,0,168,166,1,0,0,0,
168,169,1,0,0,0,169,170,1,0,0,0,170,171,6,29,0,0,171,60,1,0,0,0,14,0,63,
67,75,81,93,97,102,106,111,117,119,124,168,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class linear_progLexer extends antlr4.Lexer {

    static grammarFileName = "linear_prog.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, null, null, null, null, null, "'('", "')'", 
                         "'+'", "'-'", "'*'", "'/'", null, null, "'>'", 
                         "'<'", "'='", "'.'", "'^'", "';'", null, "'\\n'" ];
	static symbolicNames = [ null, "INIT", "ST", "END", "VARIABLE", "SCIENTIFIC_NUMBER", 
                          "LPAREN", "RPAREN", "PLUS", "MINUS", "TIMES", 
                          "DIV", "GTEQ", "LTEQ", "GT", "LT", "EQ", "POINT", 
                          "POW", "SMCOL", "ID", "ENDL", "WS" ];
	static ruleNames = [ "INIT", "ST", "END", "VARIABLE", "MAX", "MIN", "VALID_ID_START", 
                      "VALID_ID_CHAR", "SCIENTIFIC_NUMBER", "NUMBER", "UNSIGNED_INTEGER", 
                      "E", "SIGN", "LPAREN", "RPAREN", "PLUS", "MINUS", 
                      "TIMES", "DIV", "GTEQ", "LTEQ", "GT", "LT", "EQ", 
                      "POINT", "POW", "SMCOL", "ID", "ENDL", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

linear_progLexer.EOF = antlr4.Token.EOF;
linear_progLexer.INIT = 1;
linear_progLexer.ST = 2;
linear_progLexer.END = 3;
linear_progLexer.VARIABLE = 4;
linear_progLexer.SCIENTIFIC_NUMBER = 5;
linear_progLexer.LPAREN = 6;
linear_progLexer.RPAREN = 7;
linear_progLexer.PLUS = 8;
linear_progLexer.MINUS = 9;
linear_progLexer.TIMES = 10;
linear_progLexer.DIV = 11;
linear_progLexer.GTEQ = 12;
linear_progLexer.LTEQ = 13;
linear_progLexer.GT = 14;
linear_progLexer.LT = 15;
linear_progLexer.EQ = 16;
linear_progLexer.POINT = 17;
linear_progLexer.POW = 18;
linear_progLexer.SMCOL = 19;
linear_progLexer.ID = 20;
linear_progLexer.ENDL = 21;
linear_progLexer.WS = 22;



